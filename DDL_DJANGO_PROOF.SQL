-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-05-17 21:58:00 COT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE djn_tbl_admin (
    num_id_admin   NUMBER(2) NOT NULL,
    str_user_admin VARCHAR2(10 CHAR) NOT NULL,
    str_pasw       NUMBER(20) NOT NULL
);

ALTER TABLE djn_tbl_admin ADD CONSTRAINT pk_admin PRIMARY KEY ( num_id_admin );

CREATE TABLE djn_tbl_client (
    num_id_client             NUMBER(5) NOT NULL,
    str_fullname_client       VARCHAR2(200 BYTE) NOT NULL,
    str_type_identification   VARCHAR2(4) NOT NULL,
    str_identification_number VARCHAR2(20) NOT NULL,
    str_email_client          VARCHAR2(200 CHAR) NOT NULL,
    str_state                 VARCHAR2(3 CHAR) NOT NULL
);

ALTER TABLE djn_tbl_client
    ADD CONSTRAINT cnn_client_01 CHECK ( str_type_identification IN ( 'CC', 'CE', 'TI', 'NIT' ) );

ALTER TABLE djn_tbl_client
    ADD CONSTRAINT cnn_client_02 CHECK ( str_state IN ( 'ACT', 'INA' ) );

ALTER TABLE djn_tbl_client ADD CONSTRAINT pk_client PRIMARY KEY ( num_id_client );

ALTER TABLE djn_tbl_client ADD CONSTRAINT uk_client_01 UNIQUE ( str_email_client );

CREATE TABLE djn_tbl_pasw (
    num_id_pswrd      NUMBER(10) NOT NULL,
    num_id_client     NUMBER(5) NOT NULL,
    str_paswrd_client VARCHAR2(100) NOT NULL
);

ALTER TABLE djn_tbl_pasw ADD CONSTRAINT pk_pasw PRIMARY KEY ( num_id_pswrd );

CREATE TABLE djn_tbl_savings_accnt_clnt (
    num_id_account     NUMBER(15) NOT NULL,
    num_id_client      NUMBER(5) NOT NULL,
    num_amount_balance NUMBER(10, 2) NOT NULL,
    dtm_open_account   DATE NOT NULL,
    str_number_account VARCHAR2(100 CHAR)
);

ALTER TABLE djn_tbl_savings_accnt_clnt ADD CONSTRAINT pk_savings_account_client PRIMARY KEY ( num_id_account );

ALTER TABLE djn_tbl_savings_accnt_clnt ADD CONSTRAINT uk_savings_accnt_clnt_01 UNIQUE ( str_number_account );


CREATE TABLE djn_tbl_transaction (
    num_id_transaction     NUMBER(10) NOT NULL,
    num_id_account         NUMBER(15) NOT NULL,
    str_type_transaction   VARCHAR2(10) NOT NULL,
    dtm__transaction_date  DATE NOT NULL,
    num_amount_transaction NUMBER(10)
);

ALTER TABLE djn_tbl_transaction
    ADD CONSTRAINT cnn_transactino_01 CHECK ( str_type_transaction IN ( 'WITHDRAR', 'DEPOSIT', 'CHECK' ) );

ALTER TABLE djn_tbl_transaction ADD CONSTRAINT pk_transaction PRIMARY KEY ( num_id_transaction );

ALTER TABLE djn_tbl_pasw
    ADD CONSTRAINT fk_client_pasw FOREIGN KEY ( num_id_client )
        REFERENCES djn_tbl_client ( num_id_client );

ALTER TABLE djn_tbl_transaction
    ADD CONSTRAINT fk_savings_account_trnscctn FOREIGN KEY ( num_id_account )
        REFERENCES djn_tbl_savings_accnt_clnt ( num_id_account );

CREATE SEQUENCE seq_admin START WITH 1 MINVALUE 1 MAXVALUE 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER djb_tbl_admin_num_id_admin_trg BEFORE
    INSERT ON djn_tbl_admin
    FOR EACH ROW
    WHEN ( new.num_id_admin IS NULL )
BEGIN
    :new.num_id_admin := seq_admin.nextval;
END;
/

CREATE SEQUENCE seq_savins_account START WITH 1 MINVALUE 1 MAXVALUE 20000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER djn_savings_account_client_num_id_account_trg BEFORE
    INSERT ON djn_tbl_savings_accnt_clnt
    FOR EACH ROW
    WHEN ( new.num_id_account IS NULL )
BEGIN
    :new.num_id_account := seq_savins_account.nextval;
END;
/

CREATE SEQUENCE seq_client START WITH 1 MINVALUE 1 MAXVALUE 10000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER djn_tbl_client_num_id_client_trg BEFORE
    INSERT ON djn_tbl_client
    FOR EACH ROW
    WHEN ( new.num_id_client IS NULL )
BEGIN
    :new.num_id_client := seq_client.nextval;
END;
/

CREATE SEQUENCE seq_paserd START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER djn_tbl_pasw_num_id_pswrd_trg BEFORE
    INSERT ON djn_tbl_pasw
    FOR EACH ROW
    WHEN ( new.num_id_pswrd IS NULL )
BEGIN
    :new.num_id_pswrd := seq_paserd.nextval;
END;
/

CREATE SEQUENCE seq_transaction START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER djn_transaction_num_id_transaction_trg BEFORE
    INSERT ON djn_tbl_transaction
    FOR EACH ROW
    WHEN ( new.num_id_transaction IS NULL )
BEGIN
    :new.num_id_transaction := seq_transaction.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             0
-- ALTER TABLE                             12
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0



/*Function to create a save password
*/
-- Create a function to encrypt the password
CREATE OR REPLACE FUNCTION hash_password(pswar_cryp VARCHAR2) RETURN VARCHAR2 IS
    hash_cryp VARCHAR2(64);
BEGIN
    hash_cryp := DBMS_CRYPTO.HASH(UTL_RAW.CAST_TO_RAW(pswar_cryp), DBMS_CRYPTO.HASH_SH256);
    RETURN LOWER(RAWTOHEX(hash_cryp));
END;
/
--Example how to insert a value with this Function
/*INSERT INTO DJN_TBL_PASW (num_id_client, num_id_pswrd, str_paswrd_client)
VALUES (1, 1, hash_password('mi_contrase√±a_secreta'));*/

--Example how to insert a password for admin
/*INSERT INTO DJB_TBL_ADMIN (num_id_adin, str_user_admin, str_pasw)
VALUES ('adminDjango', hash_password('pepito123'));*/


/*use: VISAHACK pswd:Cambio27*05* */
